{"schemaVersion":{"patch":0,"minor":2,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"GUUnitsType.init(truncatingIfNeeded:)"},{"text":".","type":"text"}],"metadata":{"title":"init(truncatingIfNeeded:)","externalID":"s:7GUUnits0A4TypePAASzRzSz8RawValueACRpzrlE18truncatingIfNeededxx_tcfc::SYNTHESIZED::s:7GUUnits14Milliamperes_uV","modules":[{"name":"GUUnits"}],"symbolKind":"init","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BinaryInteger","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BinaryInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"GUUnits","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"truncatingIfNeeded"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"roleHeading":"Initializer","role":"symbol"},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/GUUnits\/documentation\/GUUnits\/Milliamperes_u\/init(truncatingIfNeeded:)-8cixp","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/GUUnits\/documentation\/GUUnits","doc:\/\/GUUnits\/documentation\/GUUnits\/Milliamperes_u","doc:\/\/GUUnits\/documentation\/GUUnits\/Milliamperes_u\/GUUnitsType-Implementations"]]},"variants":[{"paths":["\/documentation\/guunits\/milliamperes_u\/init(truncatingifneeded:)-8cixp"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"source","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://GUUnits/documentation/GUUnits/Milliamperes_u/GUUnitsType-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/GUUnits\/documentation\/GUUnits\/Milliamperes_u\/GUUnitsType-Implementations","title":"GUUnitsType Implementations","type":"topic","url":"\/documentation\/guunits\/milliamperes_u\/guunitstype-implementations","role":"collectionGroup"},"doc://GUUnits/documentation/GUUnits/Milliamperes_u":{"kind":"symbol","type":"topic","identifier":"doc:\/\/GUUnits\/documentation\/GUUnits\/Milliamperes_u","abstract":[{"type":"text","text":"An unsigned integer type for the milliamperes unit."}],"title":"Milliamperes_u","url":"\/documentation\/guunits\/milliamperes_u","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Milliamperes_u","kind":"identifier"}],"navigatorTitle":[{"text":"Milliamperes_u","kind":"identifier"}],"role":"symbol"},"doc://GUUnits/documentation/GUUnits":{"url":"\/documentation\/guunits","type":"topic","abstract":[],"role":"collection","title":"GUUnits","kind":"symbol","identifier":"doc:\/\/GUUnits\/documentation\/GUUnits"},"doc://GUUnits/documentation/GUUnits/Milliamperes_u/init(truncatingIfNeeded:)-8cixp":{"type":"topic","url":"\/documentation\/guunits\/milliamperes_u\/init(truncatingifneeded:)-8cixp","title":"init(truncatingIfNeeded:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"truncatingIfNeeded"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/GUUnits\/documentation\/GUUnits\/Milliamperes_u\/init(truncatingIfNeeded:)-8cixp","abstract":[],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BinaryInteger","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BinaryInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}